The App Router (modern Next.js 13+)

This is the recommended way. Youâ€™ll see an app/ folder.
Every folder inside app/ is a URL segment. Files inside control how the page renders.

my-app/
â”œâ”€ app/
â”‚  â”œâ”€ page.tsx                 // the homepage: "/"
â”‚  â”œâ”€ layout.tsx               // wrapper for all pages (header/footer)
â”‚  â”œâ”€ about/
â”‚  â”‚  â”œâ”€ page.tsx              // "/about"
â”‚  â”‚  â””â”€ layout.tsx            // wrapper only for /about subtree (optional)
â”‚  â”œâ”€ blog/
â”‚  â”‚  â”œâ”€ page.tsx              // "/blog"
â”‚  â”‚  â”œâ”€ [slug]/               // dynamic segment â†’ "/blog/hello-world"
â”‚  â”‚  â”‚  â”œâ”€ page.tsx
â”‚  â”‚  â”‚  â””â”€ loading.tsx        // skeleton while data loads (optional)
â”‚  â”‚  â””â”€ loading.tsx


1. What if we put everything in src/page.js?

You could technically make one big component in src/page.js and show your whole site there.
Butâ€¦ then your homepage, about page, blog, contact page etc. would all be in one file.

That means:
No proper URLs (/about, /blog/123 wonâ€™t work).
Hard to manage as app grows.
Users canâ€™t bookmark/share specific pages.
SEO (Google ranking) suffers because thereâ€™s no clear page structure.

ðŸ‘‰ So yes, you can do it, but it quickly becomes a mess.

2. Why Next.js uses page.tsx in every folder
Think of the app/ folder as a map of your website:

app/
â”œâ”€ page.tsx          â†’ "/"
â”œâ”€ about/
â”‚  â””â”€ page.tsx       â†’ "/about"
â”œâ”€ blog/
â”‚  â”œâ”€ page.tsx       â†’ "/blog"
â”‚  â””â”€ [slug]/
â”‚     â””â”€ page.tsx    â†’ "/blog/anything-here"


Each page.tsx = one route (URL).
The folder path = the URL path.
Next.js automatically sets up routing for you â€” no react-router needed, no manual route config.

3. Why not just import components instead?
Example:
If you put everything in src/page.js, then to visit /about youâ€™d have to write a custom router, like in normal React apps (react-router-dom).

But in Next.js:
about/page.tsx â†’ automatically becomes /about.

Inside about/page.tsx, you can import your components (e.g., Navbar, Footer, AboutContent).
So page.tsx is not where you write all the code, itâ€™s just the entry point that renders components.


src/app/BlogoApp/addBlog/page.jsx -> This is the folder structure of addBlog page
src/app/BlogoApp/context/BlogContext.jsx -> folder structure for BlogContext file